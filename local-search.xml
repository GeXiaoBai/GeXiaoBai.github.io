<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Pyspider ARM64(AARCH64)安装教程</title>
    <link href="/2024/03/11/Pyspider_ARM64(AARCH64)_install/"/>
    <url>/2024/03/11/Pyspider_ARM64(AARCH64)_install/</url>
    
    <content type="html"><![CDATA[<div align="center"><p><em><strong>注意：此教程仅通用于Ubuntu_22.04.3_Server_Arm64，树莓派(Raspberry Pi OS)原系统可能并不适用此教程</strong></em></p></div><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>硬件：SD卡读卡器、手、脑子(非常重要)</li><li>软件：BalenaEtcher(可用树莓派官方标准写入工具代替，个人认为BalenaEtcher更好用)、SSH工具(Xshell、MobaXterm或其他，个人比较爱用MobaXterm)、浏览器(Chrome、Edge等都行)</li></ul><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><ul><li>笔者打包好的镜像文件<a href="https://www.123pan.com/s/LuI9-vKGsH.html">Ubuntu Server 22.04.3</a>(此版本仅适用于SD卡大小为32GB或者更大容量的版本！)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 提取码">4cqW<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs 注意">此版本为Ubuntu_22.04.3_Server_Arm64，<br>已集成:<br>Conda(miniforge3)、<br>Python3.6(虚拟环境内)、<br>Pyspider(虚拟环境内)、<br>Phantomjs(虚拟环境内，版本aarch64 2.1.1)<br>此版本帐号为ubuntu，密码(ubuntu/root密码)：0000<br>这个可用于SSH或者正式登陆的帐号密码<br>Linux权限非常分明，如不知或不清楚可自行百度或请教老师、同学<br>此版本仅适用于SD卡大小为32GB或者更大容量的版本！<br></code></pre></td></tr></table></figure></li></ul><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><ul><li>下载镜像文件(如果这个项目仍是树莓派4B来跑的话)，镜像架构：Arm64 Ubuntu镜像下载地址<a href="https://ubuntu.com/download">Download | Ubuntu</a>里面可自行寻找需要的系统</li><li>打开BalenaEtcher进行刷写系统，如有不知怎么用的可百度解决。</li><li>SSH远程连接，如果为Ubuntu Server，那么账号为ubuntu，密码为ubuntu，如果下载的是我的系统，那么账号为ubuntu，密码为0000，原版的Ubuntu Server第一次安装开机之后会让你重设密码，打密码的时候没有显示，不用担心，重设密码之后重新连接即可。</li></ul><h3 id="安装相应软件"><a href="#安装相应软件" class="headerlink" title="安装相应软件"></a>安装相应软件</h3><ul><li>安装相应软件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 更新命令">sudo apt update &amp;&amp; sudo apt upgrade -y<br></code></pre></td></tr></table></figure>如果更新过慢可自行换源，我的系统本身为清华源，拥有不错的下载更新速度</li></ul><h3 id="安装依赖软件"><a href="#安装依赖软件" class="headerlink" title="安装依赖软件"></a>安装依赖软件</h3><ul><li>安装依赖软件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 命令">sudo apt install wget gcc libssl-dev bzip2 curl make -y<br></code></pre></td></tr></table></figure>如果更新过慢可自行换源，我的系统本身为清华源，拥有不错的下载更新速度</li><li>获取你当前树莓派的IP<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">ip a<br></code></pre></td></tr></table></figure>记住这个IP，后面会用到</li></ul><h3 id="安装Conda虚拟化工具"><a href="#安装Conda虚拟化工具" class="headerlink" title="安装Conda虚拟化工具"></a>安装Conda虚拟化工具</h3><ul><li>你当然可以选择安装<a href="https://www.anaconda.com/download/">Anaconda</a>，但是那将面临大量的资源重构 (这个东西可没有arm架构的东西) ，如果你有实力可以试着更改一下，当然也可以使用<a href="https://docs.anaconda.com/free/miniconda/index.html">miniconda</a>，这个东西已经八百年不更新了，如果想用这个那么就可能意味着要自己编译资源，所以我推荐使用<a href="https://github.com/conda-forge/miniforge">miniforge3</a>，这个东西本身就是为aarch64编译的conda虚拟环境，理论使用方法通用于<a href="https://www.anaconda.com/download/">Anaconda</a>，但是可能存在依赖或者其他的问题，但是对于PySpider已经够用，下载地址:Miniforge3-23.10.0-0-Linux-aarch64.sh(速度可能有些慢，毕竟来自GitHub，可适当开启加速器加速)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">curl -o Miniforge3-23.10.0-0-Linux-aarch64.sh https://ghproxy.net/https:/github.com/conda-forge/miniforge/releases/download/23.10.0-0/Miniforge3-23.10.0-0-Linux-aarch64.sh &amp;&amp; sudo chmod 777 Miniforge3-23.10.0-0-Linux-aarch64.sh &amp;&amp; bash Miniforge3-23.10.0-0-Linux-aarch64.sh<br></code></pre></td></tr></table></figure>按照提示完成应有的操作。</li></ul><h3 id="更改Conda虚拟化工具的源-避免下载速度过慢"><a href="#更改Conda虚拟化工具的源-避免下载速度过慢" class="headerlink" title="更改Conda虚拟化工具的源(避免下载速度过慢)"></a>更改Conda虚拟化工具的源(避免下载速度过慢)</h3><ul><li>1.查看下载源地址<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">conda config --show-sources<br></code></pre></td></tr></table></figure>查看域名是哪个(因为我改完了，而且改的时候忘记截图了，所以没有图)</li><li>2.更改下载源地址<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 设置搜索时显示通道地址(终端键入)">conda config --set show_channel_urls yes<br></code></pre></td></tr></table></figure>查看是否设置成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">conda config --show-sources<br></code></pre></td></tr></table></figure></li><li>换回默认源：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">conda config --remove-key channels<br></code></pre></td></tr></table></figure></li></ul><h3 id="创建Python虚拟环境"><a href="#创建Python虚拟环境" class="headerlink" title="创建Python虚拟环境"></a>创建Python虚拟环境</h3><h5 id="conda创建环境使用方法：conda-create-n-env-name-python-xxx"><a href="#conda创建环境使用方法：conda-create-n-env-name-python-xxx" class="headerlink" title="conda创建环境使用方法：conda create -n env_name python&#x3D;xxx"></a>conda创建环境使用方法：conda create -n env_name python&#x3D;xxx</h5><ul><li>1.创建Python虚拟环境<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">conda create -n pyspider python=3.6.7<br></code></pre></td></tr></table></figure>接下来按照要求输入“y”</li><li>2.进入Python虚拟环境(方法为：source activate your_env_name)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">conda activate pyspider<br></code></pre></td></tr></table></figure></li><li>3.退出Python虚拟环境(需要时可退出环境，方法为：source deactivate)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">conda deactivate<br></code></pre></td></tr></table></figure></li></ul><h3 id="安装Python包-Pyspider-PhantomJS"><a href="#安装Python包-Pyspider-PhantomJS" class="headerlink" title="安装Python包(Pyspider &amp; PhantomJS)"></a>安装Python包(Pyspider &amp; PhantomJS)</h3><ul><li>1.给PIP换源<br>检查当前混啊经是否存在pip，如果不存在，则需要安装pip<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 安装pip，终端键入">conda install pip<br></code></pre></td></tr></table></figure>换源(中科大的源，不知道为啥，在写这篇教程的时候清华源老是抽风)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">pip config set global.index-url https://pypi.mirrors.ustc.edu.cn/simple<br></code></pre></td></tr></table></figure></li><li>2.安装Python包(Pyspider)<br>现在我们就可以正式的安装Pyspider了<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">pip install pyspider<br></code></pre></td></tr></table></figure>如果有要求就可以按照那个要求来继续安装(一般来说不需要)</li><li>3.安装PhantomJS 2.1.1 for arm64<br>本身的PhantomJS并没有相应版本的PhantomJS，所以我们需要安装自编译的版本，正好有人维护这个东西，<a href="https://github.com/fg2it/phantomjs-on-raspberry/releases">PhantomJS 2.1.1 for arm64</a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">wget https://github.com/fg2it/phantomjs-on-raspberry/releases/download/v2.1.1-jessie-stretch-arm64/phantomjs <br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">sudo mv phantomjs /usr/local/bin/ &amp;&amp; sudo chmod +x phantomjs<br></code></pre></td></tr></table></figure></li></ul><h3 id="安装Mysql服务器以及创建相应的数据库和链接数据库"><a href="#安装Mysql服务器以及创建相应的数据库和链接数据库" class="headerlink" title="安装Mysql服务器以及创建相应的数据库和链接数据库"></a>安装Mysql服务器以及创建相应的数据库和链接数据库</h3><h5 id="哎-，没想到吧，这鬼东西还需要连接数据库呢吧-▽-我也不想写了，给你几个参考链接，大差不差"><a href="#哎-，没想到吧，这鬼东西还需要连接数据库呢吧-▽-我也不想写了，给你几个参考链接，大差不差" class="headerlink" title="哎~，没想到吧，这鬼东西还需要连接数据库呢吧 (^▽^ ),我也不想写了，给你几个参考链接，大差不差"></a>哎~，没想到吧，这鬼东西还需要连接数据库呢吧 (^▽^ ),我也不想写了，给你几个参考链接，大差不差</h5><ul><li>1.<a href="https://blog.csdn.net/qq_18301257/article/details/112209931">安装数据库</a></li><li>2.<a href="https://blog.csdn.net/paulluo0739/article/details/94446234">pyspider使用mysql作为任务数据库</a></li></ul><h5 id="声明：数据库的安装是可以不和树莓派放一块的，而且这东西可以连接同一个数据库，所以你也可以把数据库放在其他电脑上，这个数据库的架构没要求，Arm也好PC也好或者是其他的什么也好都一样，然后通过网络连接即可"><a href="#声明：数据库的安装是可以不和树莓派放一块的，而且这东西可以连接同一个数据库，所以你也可以把数据库放在其他电脑上，这个数据库的架构没要求，Arm也好PC也好或者是其他的什么也好都一样，然后通过网络连接即可" class="headerlink" title="声明：数据库的安装是可以不和树莓派放一块的，而且这东西可以连接同一个数据库，所以你也可以把数据库放在其他电脑上，这个数据库的架构没要求，Arm也好PC也好或者是其他的什么也好都一样，然后通过网络连接即可"></a>声明：数据库的安装是可以不和树莓派放一块的，而且这东西可以连接同一个数据库，所以你也可以把数据库放在其他电脑上，这个数据库的架构没要求，Arm也好PC也好或者是其他的什么也好都一样，然后通过网络连接即可</h5><h3 id="正式启动Pyspider"><a href="#正式启动Pyspider" class="headerlink" title="正式启动Pyspider"></a>正式启动Pyspider</h3><ul><li>1.进入虚拟环境<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">source activate pyspider<br></code></pre></td></tr></table></figure></li><li>2.启动Pyspider<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 终端键入">pyspider -c 路径+你的配置文件.json all<br></code></pre></td></tr></table></figure></li><li>3.默认这个端口为5000，那么访问地址就是ip:5000</li><li>4.进入Pyspider<br>浏览器输入ip:5000并回车，一般来说就可以进入了<br>如果进不去或者拒绝连接请检查防火墙是否开启，如果开启请全部关闭，然后重新连接尝试。</li></ul><h3 id="编写爬虫脚本"><a href="#编写爬虫脚本" class="headerlink" title="编写爬虫脚本"></a>编写爬虫脚本</h3><p>  这个东西就要看你们自己的了，说实话，我写的东西也不咋地，建议百度！好了，教程就到这里就结束了，剩下的请自行摸索吧，有问题可以评论区找我。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>大部分命令</title>
    <link href="/2024/03/11/mingling/"/>
    <url>/2024/03/11/mingling/</url>
    
    <content type="html"><![CDATA[<div align="center"><h2 id="HyperOS-移植项目"><a href="#HyperOS-移植项目" class="headerlink" title="HyperOS 移植项目"></a>HyperOS 移植项目</h2></div><h5 id="创建页面"><a href="#创建页面" class="headerlink" title="创建页面"></a>创建页面</h5><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat">hexo new page &quot;要创建的页面&quot;<br></code></pre></td></tr></table></figure><h5 id="启动本地服务"><a href="#启动本地服务" class="headerlink" title="启动本地服务"></a>启动本地服务</h5><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat">hexo s<br></code></pre></td></tr></table></figure><h5 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h5><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat">hexo g<br></code></pre></td></tr></table></figure><h5 id="上传部署网站"><a href="#上传部署网站" class="headerlink" title="上传部署网站"></a>上传部署网站</h5><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat">hexo d<br></code></pre></td></tr></table></figure><h5 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h5><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat">hexo clean<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/03/08/hello-world/"/>
    <url>/2024/03/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
